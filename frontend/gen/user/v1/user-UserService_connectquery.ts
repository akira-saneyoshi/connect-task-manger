// @generated by protoc-gen-connect-query v0.4.1 with parameter "target=ts"
// @generated from file user/v1/user.proto (package user.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { createQueryService } from "@bufbuild/connect-query";
import { MethodKind } from "@bufbuild/protobuf";
import { CreateUserRequest, CreateUserResponse, GetMeRequest, GetMeResponse, LoginRequest, LoginResponse, LogoutRequest, LogoutResponse, UpdateUserRequest, UpdateUserResponse } from "./user_pb.js";

export const typeName = "user.v1.UserService";

/**
 * @generated from rpc user.v1.UserService.CreateUser
 */
export const createUser = createQueryService({
  service: {
    methods: {
      createUser: {
        name: "CreateUser",
        kind: MethodKind.Unary,
        I: CreateUserRequest,
        O: CreateUserResponse,
      },
    },
    typeName: "user.v1.UserService",
  },
}).createUser;

/**
 * @generated from rpc user.v1.UserService.Login
 */
export const login = createQueryService({
  service: {
    methods: {
      login: {
        name: "Login",
        kind: MethodKind.Unary,
        I: LoginRequest,
        O: LoginResponse,
      },
    },
    typeName: "user.v1.UserService",
  },
}).login;

/**
 * @generated from rpc user.v1.UserService.UpdateUser
 */
export const updateUser = createQueryService({
  service: {
    methods: {
      updateUser: {
        name: "UpdateUser",
        kind: MethodKind.Unary,
        I: UpdateUserRequest,
        O: UpdateUserResponse,
      },
    },
    typeName: "user.v1.UserService",
  },
}).updateUser;

/**
 * @generated from rpc user.v1.UserService.Logout
 */
export const logout = createQueryService({
  service: {
    methods: {
      logout: {
        name: "Logout",
        kind: MethodKind.Unary,
        I: LogoutRequest,
        O: LogoutResponse,
      },
    },
    typeName: "user.v1.UserService",
  },
}).logout;

/**
 * @generated from rpc user.v1.UserService.GetMe
 */
export const getMe = createQueryService({
  service: {
    methods: {
      getMe: {
        name: "GetMe",
        kind: MethodKind.Unary,
        I: GetMeRequest,
        O: GetMeResponse,
      },
    },
    typeName: "user.v1.UserService",
  },
}).getMe;
